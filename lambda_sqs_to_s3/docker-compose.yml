version: '3.8'

services:
  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"            # LocalStack Edge Port
      - "4510-4559:4510-4559"  # External services port range
    environment:
      - DEBUG=1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - LAMBDA_EXECUTOR=docker
      - LAMBDA_REMOTE_DOCKER=false
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SERVICES=lambda,s3,sqs,iam,logs,sts
      - PERSISTENCE=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - aws-local

  terraform:
    image: hashicorp/terraform:latest
    volumes:
      - .:/workspace
    working_dir: /workspace
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - TF_VAR_environment=local
      - TF_VAR_aws_endpoint=http://localstack:4566
    networks:
      - aws-local
    depends_on:
      - localstack

  awscli:
    image: amazon/aws-cli:latest
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
    volumes:
      - .:/workspace
    networks:
      - aws-local
    depends_on:
      - localstack

  message-sender:
    build:
      context: .
      dockerfile: sender.Dockerfile
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - SQS_QUEUE_NAME=incoming-messages-queue
      - PYTHONUNBUFFERED=1
    volumes:
      - .:/app
    networks:
      - aws-local
    depends_on:
      - localstack

networks:
  aws-local:
    driver: bridge
